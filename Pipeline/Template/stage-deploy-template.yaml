parameters:
  - name: resourceGroup
    default: "VOTING_RG"
  - name: azureSubscription
    default: "Azure subscription 1"
  - name: terraformResourceGroup
    default: "TERRAFORM_RG"
  - name: terraformStorageAccount
    default: "terraformst"
  - name: terraformContainer
    default: "tfstate"

jobs:
  - deployment: configure_azure
    displayName: Configure azure
    environment: "Development"
    workspace:
      clean: all
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              clean: true
              fetchDepth: 0

            - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
              displayName: "Terraform: Install v1.11.2"
              inputs:
                terraformVersion: "1.11.2"
            - task: AzureCLI@2
              displayName: "Prepare backend for terraform"
              inputs:
                scriptType: ps
                scriptLocation: inlineScript
                azureSubscription: ${{ parameters.azureSubscription }}
                inlineScript: |
                  $RESOURCE_GROUP_NAME='${{ parameters.terraformResourceGroup }}'
                  $STORAGE_ACCOUNT_NAME='${{ parameters.terraformStorageAccount }}'
                  $CONTAINER_NAME='${{ parameters.terraformContainer }}'
          
                  az group create --name $RESOURCE_GROUP_NAME --location westeurope
          
                  az storage account create --resource-group $RESOURCE_GROUP_NAME --name $STORAGE_ACCOUNT_NAME --sku Standard_LRS --encryption-services blob
          
                  az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT_NAME
          
                  $ACCOUNT_KEY=(az storage account keys list --resource-group $RESOURCE_GROUP_NAME --account-name $STORAGE_ACCOUNT_NAME --query '[0].value' -o tsv)
                  $env:ARM_ACCESS_KEY=$ACCOUNT_KEY
            - task: TerraformTaskV2@2
              displayName: "Terraform: Init"
              inputs:
                  provider: "azurerm"
                  command: "init"
                  workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
                  backendServiceArm: ${{ parameters.azureSubscription }}
                  backendAzureRmResourceGroupName: ${{ parameters.terraformResourceGroup }}
                  backendAzureRmStorageAccountName: ${{ parameters.terraformStorageAccount }}
                  backendAzureRmContainerName: ${{ parameters.terraformContainer }}
                  backendAzureRmKey: "terraform.tfstate"
            - task: TerraformTaskV2@2
              displayName: "Terraform: Validate"
              inputs:
                  command: validate
                  workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"