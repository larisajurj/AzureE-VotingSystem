parameters:
  - name: resourceGroup
    default: "VOTING_RG"
  - name: azureSubscription
    default: "eVotingAzureServiceConnection"
  - name: azureConnection
    default: "eVotingAzureServiceConnection"
  - name: terraformResourceGroup
    default: "TERRAFORM_RG"
  - name: terraformStorageAccount
    default: "terraformst2"
  - name: terraformContainer
    default: "tfstate"

jobs:
  - deployment: configure_azure
    displayName: Configure azure
    environment: "Development"
    workspace:
      clean: all
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
              clean: true
              fetchDepth: 0

            - task: TerraformInstaller@1
              inputs:
                  terraformVersion: 'latest'
            - task: TerraformTaskV4@4
              displayName: "Terraform: Init"
              inputs:
                  provider: "azurerm"
                  command: "init"
                  workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
                  backendServiceArm: ${{ parameters.azureConnection }}
                  backendAzureRmResourceGroupName: ${{ parameters.terraformResourceGroup }}
                  backendAzureRmStorageAccountName: ${{ parameters.terraformStorageAccount }}
                  backendAzureRmContainerName: ${{ parameters.terraformContainer }}
                  backendAzureRmKey: "terraform.tfstate"
            - task: TerraformTaskV4@4
              displayName: "Terraform: Validate"
              inputs:
                  command: validate
                  workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
            - task: TerraformTaskV4@4
              displayName: "Terraform: Plan"
              inputs:
                  provider: "azurerm"
                  command: "plan"
                  workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
                  commandOptions: "-input=false -var-file=variables/variables.tf -out=$(Agent.TempDirectory)/tfplan"
                  environmentServiceNameAzureRM: ${{ parameters.azureConnection }}
            - task: TerraformTaskV4@4
              displayName: "Terraform: Apply"
              name: terraform_apply
              inputs:
                  provider: "azurerm"
                  command: "apply"
                  workingDirectory: "$(System.DefaultWorkingDirectory)/terraform"
                  commandOptions: "-auto-approve -input=false $(Agent.TempDirectory)/tfplan"
                  environmentServiceNameAzureRM: ${{ parameters.azureConnection }}
                  outputVariablesToJson: "$(Build.ArtifactStagingDirectory)/terraform_output.json"