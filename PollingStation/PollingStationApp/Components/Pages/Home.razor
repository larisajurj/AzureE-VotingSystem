@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.AspNetCore.SignalR.Client
@using PollingStationApp.Components.Shared
@using PollingStationApp.Data.Helpers.Abstractions
@using PollingStationApp.Models
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject ITokenProvider TokenProvider
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IConfiguration Configuration

<PageTitle>Home</PageTitle>
<div class="content">
    <VoterPopUp Voter="Voter"></VoterPopUp>

</div>

@code {
    private ClaimsPrincipal? _user;
    private HubConnection? hubConnection;
    private string baseUrl;
    private string exc;
    private RegisteredVoter Voter;

    protected override async Task OnInitializedAsync()
    {
        Voter = new RegisteredVoter
            {
                LastName = "Nespecificat",
                FirstName = "Nespecificat",
                DateOfBirth = DateTime.MinValue,
                PlaceOfBirth = "Nespecificat",
                Gender = "Nespecificat",
                PollingStationId = "N/A",
                Id = new Guid()
            };
        baseUrl = Configuration["ConnectionStrings:PollingStationAPI"];
        try
        {
            hubConnection = new HubConnectionBuilder()
                .WithUrl($"{baseUrl}/voting") // Change to your actual hub endpoint
                .WithAutomaticReconnect()
            .Build();

            await hubConnection.StartAsync();
        }
        catch (Exception e)
        {
            exc = e.Message;
        }

    }
    protected async void OnClick(EventArgs args)
    {
        Console.WriteLine("click event");
        exc = "click event";
        //var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //_user = authState.User;
        //var token = await TokenProvider.GetAccessTokenAsync(_user);
        //Console.WriteLine($"Token: {token}");
        if(hubConnection!=null){
            exc = "invoked";
            await hubConnection.InvokeAsync("UnlockApp", "2", "1");
        }
    }
    
    
}