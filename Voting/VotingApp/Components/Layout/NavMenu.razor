@using VotingApp.Services.Abstractions
@inject IUserOnlineService UserOnlineService
@inject IPollingStationClient PollingStationClient
@attribute [StreamRendering]
@rendermode InteractiveServer

<div class="top-row ps-3 navbar">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <i class="polling-station-icon fa-solid fa-person-booth"></i>
            <span class="title">Buletinul de Vot</span>
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <i class="polling-station-icon navmenu-icon fa-solid fa-house"></i>
                <span class="title">@(UserOnlineService.CabinNumber ?? "Neînregistrat")</span>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <span class="text-muted">Cum se folosește aplicația?</span>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <i class="polling-station-icon navmenu-icon fa-solid fa-cloud"></i>
                <span class="title">Tutorial</span>
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        UserOnlineService.OnChange += StateHasChanged;
        Console.WriteLine("NavMenu subscribed to OnChange");
    }

    public void Dispose()
    {
        UserOnlineService.OnChange -= StateHasChanged;
        Console.WriteLine("NavMenu unsubscribed from OnChange");
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
